<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.2.xsd">
  <!-- component-scan表示扫描控件  用来扫描注解  -->
  <context:component-scan base-package="cn.et.test2.mvc">
    <!-- exclude用来排除spring默认扫描的注解  如Controller Service... 
         annotation表示排除的类型为注解     assignable表示排除的类型为具体的类
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    <context:exclude-filter type="assignable" expression="cn.et.test2.mvc.controller.MyService"/>
    -->
    <!-- include用来包含新的注解让spring扫描 -->
    <context:include-filter type="annotation" expression="cn.et.test2.mvc.T"/>
  </context:component-scan>
  <!-- 如果没有指定id的类  默认名字是  类名#编号    ‘从0开始’ -->
  <!-- autowire 自动装配    将当前实例中所有的对象属性   全部进行填充
       byType 根据对象属性的类型进行查找对应的实例     (只适合在容器中只有一个实例的类型)
       byName 根据对象属性的名字进行查找对应的实例  
       
       scope 设置bean的实例化个数  默认为单实例
       singleton 单实例   容器初始化时实例化
       prototype 多实例   调用getBean方法时实例化
  -->
  <!-- 可用bean定义读取的资源文件， 也可以加入context命名空间来定义读取的资源文件 -->
  <!-- <bean id="ppc" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="location" value="classpath:/cn/et/test2/jdbc.properties"></property>
  </bean> -->
  <context:property-placeholder location="classpath:/cn/et/test2/jdbc.properties"/>
  <!-- 两种配置连接的方式
    一：在xml配置文件中配置
  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
  	数据源只是为了获取连接
    <property name="url" value="${url}"></property>
    username是一个关键字，使用bean定义时会优先读取配置文件中的键值对，使用context定义会优先使用系统管理员帐号(administrator)
    <property name="username" value="${username1}"></property>
    <property name="password" value="${password}"></property>
    <property name="driverClassName" value="${driverClassName}"></property>
  </bean>
  	封装一些操作的方法，直接连接数据库
  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource"></property>
  </bean> 
    二：使用java文件自己配置 （MyConfig）
  -->
  <!-- 导入其他xml配置文件
  <import resource="spring1.xml"/> -->
</beans>